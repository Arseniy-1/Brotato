name: Build project

on: [push, workflow_dispatch]

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest  # ← Лучше для Unity CI
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - WebGL
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Verify project
        run: |
          echo "Project structure:"
          ls -la src/Brotato/ProjectSettings/
          echo "Unity version:"
          cat src/Brotato/ProjectSettings/ProjectVersion.txt
      
      - uses: actions/cache@v3
        with:
          path: src/Brotato/Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('src/Brotato/Packages/packages-lock.json') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
      
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}  # ← ТОЛЬКО этот секрет
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: "src/Brotato"
          customParameters: -logFile /dev/stdout  # ← для диагностики
      
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
